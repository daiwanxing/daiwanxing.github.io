(()=>{"use strict";const e={vue:"#44bd87",javascript:"#f0db4f",react:"#087ea4",html:"rgb(255,87,34)",css:"rgb(0,106,177)"},{useFetchRepolist:t,useFetchUserInfo:n}={useFetchRepolist:function(){const e=[];return{fetchGithubRepos:async function(){const t=await fetch("https://api.github.com/users/daiwanxing/repos",{method:"get"}),n=await t.json();Array.isArray(n)&&e.push(...n.filter((e=>!e.fork&&e.language)).sort(((e,t)=>t.stargazers_count-e.stargazers_count)))},repolist:e}},useFetchUserInfo:function(){const e={};return{userData:e,fetchUser:async()=>{const t=await fetch("https://api.github.com/users/daiwanxing"),n=await t.json();Object.assign(e,n)}}}},{userData:a,fetchUser:s}=n(),{repolist:r,fetchGithubRepos:c}=t();c().then((()=>function(t){const n=document.querySelector(".repo-list"),a=document.createDocumentFragment(),s=t.map((t=>document.createRange().createContextualFragment(`\n                  <li>\n                      <div>\n                          <span><i class="fa-solid fa-book"></i></span>\n                          <a href="${t.html_url}" target="_blank">${t.name}</a>\n                      </div>\n                      <p class="repo-describe">${t.description||"-"}</p>\n                      <div class="repo-thumbnail">\n                          <span><i style="color: ${e[t.language.toLocaleLowerCase()]}"></i>\n                          ${t.language}\n                          </span>\n                          <span>\n                                <i class="fa-solid fa-star"></i>\n                                ${t.stargazers_count}\n                            </span>\n                          <span>\n                              <i class="fa-solid fa-code-fork"></i>${t.forks_count}\n                            </span>\n                      </div>\n                  </li>\n              `)));[...n.children].forEach((e=>e.remove())),a.append(...s),n.append(a)}(r))),s().then((()=>function(e){const t=document.querySelector("aside .user-detail"),n=document.createDocumentFragment();n.appendChild(document.createRange().createContextualFragment(`\n    <figure>\n      <img src="${e.avatar_url}" />\n      <figcaption>\n        <h2>${e.name}</h2>\n      </figcaption>\n      <p>${e.bio}</p>\n    </figure>\n  `));const a=t.firstElementChild;t.removeChild(a),t.appendChild(n)}(a)));const{toggle:o}=function(){const e=document.querySelector(".dark-light-btn"),t={value:("dark",window.matchMedia("(prefers-color-scheme: dark)").matches)};const n=()=>{const n=e.firstElementChild;n.classList.remove("l"),n.classList.remove("r"),n.firstElementChild.remove(),n.innerHTML=`<i class="fa-solid fa-${t.value?"moon":"sun"}"></i>`,document.querySelector("html").setAttribute("data-theme",t.value?"dark":"light"),queueMicrotask((()=>{n.classList.add(t.value?"r":"l")}))},a=window.matchMedia("(prefers-color-scheme: dark)"),s=window.matchMedia("(prefers-color-scheme: light)");return a.onchange=e=>{e.matches&&(t.value=!0,n())},s.onchange=e=>{e.matches&&(t.value=!1,n())},n(),{toggle:()=>{t.value=!t.value,n()}}}();document.querySelector(".switch-mode-btn").addEventListener("click",o)})();